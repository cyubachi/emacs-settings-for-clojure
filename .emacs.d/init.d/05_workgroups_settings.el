(add-to-list 'load-path "~/workgroups/workgroups.el")
(setq wg-prefix-key (kbd "C-c w"))
(require 'workgroups)
(workgroups-mode 1)
(wg-load "~/workgroups/wg01")
(add-hook 'auto-save-hook
          (lambda ()
            (wg-update-all-workgroups)
            (wg-save "~/workgroups/wg01")))
(add-hook 'kill-emacs-hook
          (lambda ()
            (wg-update-all-workgroups)
            (wg-save "~/workgroups/wg01")))

(require 'switch-window)
 (select-window (third (switch-window--list)))

;; (defun display-main-window (buffer alist)
;;   (window--display-buffer buffer (second (switch-window--list)) 'reuse))
;; (defun display-third-window (buffer alist)
;;   (select-window (nth 2 (switch-window--list)))
;;   (window--display-buffer buffer (nth 2 (switch-window--list)) 'reuse))
;; (defun display-forth-window (buffer alist)
;;   (select-window (nth 3 (switch-window--list)))
;;   (window--display-buffer buffer (nth 3 (switch-window--list)) 'reuse))

(setq inhibit-startup-screen t)
;; (setq display-buffer-alist
;;       '(("*anything.*?*" . (display-forth-window . nil))
;;         ("*cider.*?*" . (display-forth-window . nil))
;;         ("*cider-error.*?*" . (display-forth-window . nil))
;;         ("*Async Shell Command.*?*" . (display-third-window . nil))
;;         ("*magit: .*?*" . (display-main-window . nil))
;;         ("*magit-process: .*?*" . (display-third-window . nil))
;;         ("*eshell.*?*" . (display-third-window . nil))))
(eshell)

(require 'window-purpose)
(purpose-mode)
(add-to-list 'purpose-user-regexp-purposes '("^\\*scratch\\*$" . sub-2))
(add-to-list 'purpose-user-regexp-purposes '("*magit: .*?*" . main))
(add-to-list 'purpose-user-regexp-purposes '(".*.el" . main))
(add-to-list 'purpose-user-mode-purposes '(clojure-mode . main))
(add-to-list 'purpose-user-mode-purposes '(dired-mode .main))
(add-to-list 'purpose-user-regexp-purposes '("^\\*eshell\\*$" . sub-1))
(add-to-list 'purpose-user-regexp-purposes '("*magit: .*?*""*magit-process: .*?*" . sub-1))
(add-to-list 'purpose-user-regexp-purposes '("^\\*anything\\*$" . sub-2))
(add-to-list 'purpose-user-regexp-purposes '("^\\*cider-error.*" . sub-1))
(add-to-list 'purpose-user-regexp-purposes '("^\\*cider-repl.*" . sub-2))
(add-to-list 'purpose-user-regexp-purposes '("^\\*magit-*diff.*" . main))
(add-to-list 'purpose-user-regexp-purposes '("^\\*cider-debug.*" . sub-1))
(add-to-list 'purpose-user-regexp-purposes '("^\\*Async Shell Command.*$" . sub-1))
(purpose-compile-user-configuration)
